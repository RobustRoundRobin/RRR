# https://github.com/rliebz/tusk
interpreter: bash -c
usage: "tasks for working with the fetlar gcp test cluster"
name: rrr-fetlar
options:
  configdir:
    usage: >
      The common root for everything we need. All defaults are relative to this
    environment: PWD
  workdir:
    usage: >
      The directory containing all the repos we need go-rrr, quorum etc
    default:
      command: echo $(cd $(git rev-parse --show-toplevel)/..; pwd)
  geth:
    # default: "go run github.com/ethereum/go-ethereum/cmd/geth"
    default: "docker run --rm -v ${workdir}:${workdir} geth-rrr:latest --nousb"
  rrrctl:
    # default: "go run cmd/rrrctl/main.go"
    default: "docker run --rm -v ${workdir}:${workdir} rrrctl:latest"

tasks:

  jump:
    run:
      - command:
          exec: |
            set -e
            kubectl -n monitoring run -i --tty --image=alpine:latest --restart=Never -- sh

  blocksdb:
    options:
      force:
        usage: "add --force to apply"
        short: "f"
        type: bool

      start:
        short: "s"
      end:
        short: "e"

      endpoint:
        default: "http://127.0.0.1:8300"

    run:
      - command:
          exec: |
            set -e
            dbfile=$(pwd)/rrrblocks.db
            ${force} && rm $dbfile
            cd ../go-rrr/tools
            echo "blocksdb file: ${dbfile}"
            time ${rrrctl} \
              inspectheaders \
                --endpoint ${endpoint} \
                --dbshare \
                --dbname ${dbfile} \
                --start ${start} --end ${end}
            echo "done. blocksdb file: ${dbfile}"

  up:
    options:
      force:
        usage: "add --force to apply"
        short: "f"
        type: bool
    run:
      - command:
          exec: |
            set -e
            kubectl apply -k k8s/fetlar/ledger $(${force} && echo "--force")

  down:
    run:
      - command:
          exec: |
            set -e
            kubectl delete -k k8s/fetlar/ledger

  gendoc:
    usage: "create a genesis document from a template doc and alpha contributions"
    options:
      account:
        usage: "the wallet to allocate the genesis balance to - suggest you change the default!"
        short: "w"
        default:
          command: echo $(tools/gcpsecrets.sh getsecret -x qnode-0-wallet-address)
      balance:
        usage: "The balance to allocate to the genesis-account"
        default: "1000000000000000000000000000"

      template:
        usage: "template file to use. by default genesis.json from this repo is used"
        short: "g"
        default: ""
      start:
        short: "s"
        default: "0"
      end:
        short: "e"
        default: "29"

    run:
      - command:
          exec: |
            set -e

            export EXTRADATA=$(tusk -q -f $(pwd)/tusk-fetlar.yml \
              extra \
                --configdir ${configdir} \
                --workdir ${workdir} \
                -s ${start} -e ${end})

            cat <<PYEND | python3
            import os
            import json
            from pathlib import Path
            templatefile = "${template}"
            if not templatefile:
                templatefile = Path("genesis.json").resolve()
            else:
                templatefile = Path("${workdir}").joinpath(templatefile)

            o = json.load(open(templatefile))
            try:
                del o["alloc"]["0x0000000000000000000000000000000000000000"]
            except KeyError:
                pass
            o["alloc"]["${account}"] = dict(balance="${balance}")

            extraData = os.environ["EXTRADATA"]
            if not extraData.startswith("0x"):
                extraData = "0x" + extraData
            o["extraData"] = extraData
            print(json.dumps(o, indent=2, sort_keys=True))
            PYEND

  ensuresecrets:
    options:
      start:
        short: "s"
        default: "0"
      end:
        short: "e"
        default: "29"

    run:
      - command:
          exec: |

            for i in $(seq ${start} ${end})
            do
              tools/gcpsecrets.sh nodekey qnode-$i-
              tools/gcpsecrets.sh wallet qnode-$i-wallet-
            done

  deletesecrets:
    options:
      start:
        short: "s"
        default: "0"
      end:
        short: "e"
        default: "29"

    run:
      - command:
          exec: |

            NAMES=""

            for i in $(seq ${start} ${end})
            do
              NAMES="$NAMES qnode-$i-key qnode-$i-enode qnode-$i-wallet-key qnode-$i-wallet-pub qnode-$i-wallet-password qnode-$i-wallet-address"
            done
            tools/gcpsecrets.sh delete $NAMES

  extra:
    usage: "Generate the extradata for genesis"
    options:
      start:
        short: "s"
        default: "0"
      end:
        short: "e"
        default: "29"

    run:
      - command:
          exec: |
            KEY0=$(tools/gcpsecrets.sh getnodekey qnode-0-key)
            ALPHA=""
            for i in $(seq ${start} ${end})
            do
              rm -f alpha-$i.json


              tools/gcpsecrets.sh signalpha qnode-$i-key > ${configdir}/alpha-$i.json
              echo $(cat ${configdir}/alpha-$i.json) 1>&2
              ALPHA="$ALPHA ${configdir}/alpha-$i.json"
            done

            cd ${workdir}/go-rrr/tools
            ${rrrctl} genextra \
               --keyhex $KEY0 \
               $ALPHA
