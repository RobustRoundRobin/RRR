version: "3.8"

# This compose file supports running a prebuild image, running via go run from
# mounted sources, and running under dlv for host debugging.
#
# The debug service exists to build the image that is used to host the go tool
# chain for go run and dlv modes. It only needs to be built if the base go lang
# version is updated or delve needs to be upgraded.
#
# An .env file which sets the following variables MUST be in place
# - RRR_SRC path to rrr's quorum fork top directory 'go-etherum'
# - RRR_NODE_ROOT path to a directory containing node[n] data directories
#   for geth
# If all the nodes are set to use 'node-default', RRR_SRC is not necessary.
# If any are set to node-gorun or node-debug, it must be set.

x-node-env-defaults:
  &node-env-defaults
  NETWORKID: "53456"
  PRIVATE_CONFIG: ignore
  RRR_OPTS: "--rrr.nc 2 --rrr.ne 7 --rrr.q 4 --rrr.confirmphase 3500 --rrr.roundlength 6500"
  DISCOVERY_OPTS: "--nodiscover"
  P2P_PORT: 7200
  RPC_OPTS: "\
   --allow-insecure-unlock \
   --rpc \
   --rpcaddr 0.0.0.0 \
   --rpcport 8300 \
   --rpcapi 'admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum' \
   --rpccorsdomain '*' \
   --rpcvhosts '*'"
  WS_OPTS: "--ws --wsport 8400 --wsorigins '*'"
  MINER_OPTS: "\
   --miner.gastarget 3000000000 \
   --mine --minerthreads 1 --miner.etherbase 0xfddc8ec119e799a3fb2c3455cabe72a1bd59fb5a"
  LOG_OPTS: "--vmodule consensus/*=7,miner/*=5 --verbosity 3"
  # --debug adds source and line no
  # LOG_OPTS: "--debug --vmodule consensus/*=7,miner/*=5 --verbosity 3"

  # Different default ways to start geth

  RUN_GETH_CMD: geth

# env for debuging from the host via dlv
x-node-env-debug:
  &node-env-debug
  << : *node-env-defaults
  GOCACHE: /tmp/go-cache
  RUN_GETH_CMD: "/dbg/dlv debug --headless --listen=:2345 --log --api-version=2 github.com/ethereum/go-ethereum/cmd/geth -- "

# env for running from host sources (rather than building the image) - faster
# turnaround for very small networks, but more than 4 or 5 nodes takes a long
# time to startup.
x-node-env-gorun:
  &node-env-gorun
  << : *node-env-defaults
  GOCACHE: /tmp/go-cache
  RUN_GETH_CMD: go run github.com/ethereum/go-ethereum/cmd/geth

x-node-base:
  &node-base
  volumes:
    # Defined in the .env file
    - ${RRR_NODE_ROOT}:/nodes

  ports:
    - "7200"
    - "8300"
    - "8400"

  entrypoint:
    - /bin/sh
    - -cx
    - |
      # The RUN_GETH_CMD variable is set by the environment of each of the
      # supported x-node-{flavour}'s, the others all come from node-env-defaults
      # It is assumed that the service entry sets the working_dir to the
      # correct node directory for the --nodekey and --datadir options
      $${RUN_GETH_CMD} \
          $${RRR_OPTS} \
          --networkid $${NETWORKID} \
          $${DISCOVERY_OPTS} \
          --port $${P2P_PORT} \
          --nodekey key \
          --datadir data \
          --gcmode archive  --syncmode full \
          --nousb \
          $${MINER_OPTS} \
          $${RPC_OPTS} \
          $${LOG_OPTS}

x-node-defaults:
  &node-defaults
  <<: *node-base
  environment:
    << : *node-env-defaults
  image: geth-rrr:latest
  volumes:
    # Defined in the .env file
    - ${RRR_NODE_ROOT}:/nodes

x-node-exposed:
  &node-exposed
  << : *node-base
  environment:
    << : *node-env-defaults
  image: geth-rrr:latest
  volumes:
    # Defined in the .env file
    - ${RRR_NODE_ROOT}:/nodes
  ports:
    - "7200:7200"
    - "8545:8300"
    - "8400:8400"

x-node-debug:
  &node-debug
  <<: *node-base
  environment:
    << : *node-env-debug
  image: rrr-delve:dev
  volumes:
    - go-cache-volume:/tmp/go-cache
    - go-pkg-volume:/go/pkg
    # These variables are defined in the .env file
    - ${RRR_SRC}:/go/src
    - ${RRR_NODE_ROOT}:/nodes
  ports:
    - "2345:2345"
    - "8300"
    - "7200"

x-node-gorun:
  &node-gorun
  <<: *node-base
  environment:
    << : *node-env-gorun
  image: rrr-delve:dev
  volumes:
    - go-cache-volume:/tmp/go-cache
    - go-pkg-volume:/go/pkg
    # These variables are defined in the .env file
    - ${RRR_SRC}:/go/src
    - ${RRR_NODE_ROOT}:/nodes
  # ports from node-base

services:
  debug:
    # convenience for building the debug image, not for running it
    image: rrr-delve:dev
    build:
      context: .
      dockerfile: Dockerfile-delve

  # * One of the nodes can be set to << : *node-debug, to be debuged via a
  #   delve connection from the host, but the others must all be node-default or
  #   node-gorun
  # * Any can be set to << : *node-gorun, but more than 3 or 4 set that way
  #   significantly slow down startup.
  #   node-defaults assumes the image referenced by x-node-defaults has been
  #   built.
  node0:
    << : *node-exposed
    # << : *node-gorun
    # << : *node-debug
    working_dir: /nodes/node0

  node1:
    << : *node-defaults
    working_dir: /nodes/node1

  node2:
    << : *node-defaults
    working_dir: /nodes/node2

  node3:
    << : *node-defaults
    working_dir: /nodes/node3

  # The tactic of using 'go run' so that it is fast to iterate code changes
  # does not scale to much more than 5 nodes - the go linker typically gets OOM
  # killed on a mac if they are all started together. And starting 5+
  # individually is a little tiresome.
  node4:
    << : *node-defaults
    working_dir: /nodes/node4

  node5:
    << : *node-defaults
    working_dir: /nodes/node5

  node6:
    << : *node-defaults
    working_dir: /nodes/node6

  node7:
    << : *node-defaults
    working_dir: /nodes/node7

  node8:
    << : *node-defaults
    working_dir: /nodes/node8

  node9:
    << : *node-defaults
    working_dir: /nodes/node9


  node10:
    << : *node-defaults
    working_dir: /nodes/node10

  node11:
    << : *node-defaults
    working_dir: /nodes/node11

volumes:
  go-pkg-volume:
  go-cache-volume:
